LAMMPS (7 Feb 2024 - Update 1)
# VARIABLES
variable fname index InitialFile.txt
variable simname index InitialFile

# Initialization
units		lj
boundary	    p p p
atom_style	bond
read_restart	restart.equil
Reading restart file ...
  restart file = 7 Feb 2024, LAMMPS = 7 Feb 2024
  restoring atom style bond from restart
  orthogonal box = (0 0 0) to (300.5 358.5 358.5)
  1 by 1 by 1 MPI processor grid
  restoring pair style morse from restart
  restoring bond style harmonic from restart
  200 atoms
  199 bonds
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0.5     
  special bond factors coul:  0        0        0.5     
     2 = max # of 1-2 neighbors
     2 = max # of 1-3 neighbors
     4 = max # of 1-4 neighbors
     9 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_restart CPU = 0.047 seconds
#read_data InitialFile.txt extra/bond/per/atom 3 extra/special/per/atom 3

# Dreiding potential information
neighbor	2.0 bin
neigh_modify every 1 delay 0 check yes

# Define the bond potential
# Type - Energy - Equilibrium bond length
bond_style      harmonic
bond_coeff	Normal 30 1
bond_coeff	MM 30 1
special_bonds lj/coul 0.0 0.0 0.5

# Define morse potentials D - alpha - r0
pair_style	morse 3.0 # Cutoff
pair_coeff	* * 5e-2 2 1.5
pair_coeff M M 5e-2 2 1.0

compute csym all centro/atom fcc
compute peratom all pe/atom

#####################################################
# set timestep of integrator

timestep 0.01

#####################################################
compute R2 all gyration
compute pe all pe

#####################################################
# Equilibration (Brownian dynamics at 300 K)

# Not necessary anymore as it is already equilibrated

#velocity 	all create 1.0 12315
#fix		1 all nve/limit 0.5
#fix 2 all langevin 1.0 1.0 1.0 12315
#thermo_style	custom step temp
#thermo          10000

#run		1000000

#write_restart restart.equil
# Not necessary anymore to have a restart file as it is already loaded

#####################################################
# Calculate volume of polymer
variable natoms equal count(all)   # Count total atoms
variable lx equal lx                # Current x dimension of simulation box
variable ly equal ly                # Current y dimension of simulation box
variable lz equal lz                # Current z dimension of simulation box
variable volume_polymer equal "v_lx*v_ly*v_lz/v_natoms"   # Volume of polymer

# Calculate new box dimensions
variable margin equal 10.0         # Margin to add to volume of polymer
variable new_volume equal "v_volume_polymer + v_margin"         # New volume of simulation box
variable scale_factor equal (v_new_volume/v_volume_polymer)^(1.0/3.0)
change_box all x scale ${scale_factor} y scale ${scale_factor} z scale ${scale_factor} boundary f p p
change_box all x scale 1.00001726149664 y scale ${scale_factor} z scale ${scale_factor} boundary f p p
change_box all x scale 1.00001726149664 y scale 1.00001726149664 z scale ${scale_factor} boundary f p p
change_box all x scale 1.00001726149664 y scale 1.00001726149664 z scale 1.00001726149664 boundary f p p
Changing box ...
  orthogonal box = (-0.0025935399 0 0) to (300.50259 358.5 358.5)
  orthogonal box = (-0.0025935399 -0.0030941233 0) to (300.50259 358.50309 358.5)
  orthogonal box = (-0.0025935399 -0.0030941233 -0.0030941233) to (300.50259 358.50309 358.50309)

#####################################################

#unfix 1
#unfix 2

#fix 1 .0
#minimize 1.0e-4 1.0e-6 1000 10000

dump mydmp all atom 500 dump.lammpstrj

#####################################################
# CenH Region, Promoter and Transcription

group cenH id 61:90
30 atoms in group cenH
group promoter id 120 121 122
3 atoms in group promoter
group transc id 123:130
8 atoms in group transc
group others subtract all cenH promoter transc
159 atoms in group others
group outOFCenH subtract all cenH
170 atoms in group outOFCenH
group M_Atoms type 3
75 atoms in group M_Atoms
group NotPromoter subtract all promoter
197 atoms in group NotPromoter
#####################################################

timestep 0.001

#####################################################
molecule AM_post AM_post-reaction.template
Read molecule template AM_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 2
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AM_pre AM_pre-reaction.template
Read molecule template AM_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AU_post AU_post-reaction.template
Read molecule template AU_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 1
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AU_pre AU_pre-reaction.template
Read molecule template AU_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 2
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MA_post MA_post-reaction.template
Read molecule template MA_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MA_pre MA_pre-reaction.template
Read molecule template MA_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MU_post MU_post-reaction.template
Read molecule template MU_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MU_pre MU_pre-reaction.template
Read molecule template MU_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0



#####################################################
# Do the reactions
fix 4 all bond/react      react reacAU NotPromoter 1 0 2 AM_pre AM_post simple.map molecule intra prob 1e-5 1390     react reacMU NotPromoter 1 0 2 AU_pre AU_post simple.map molecule intra prob 1e-5 389     react reacUA NotPromoter 1 0 2 MA_pre MA_post simple.map molecule intra prob 1e-5 3890     react reacUM NotPromoter 1 0 2 MU_pre MU_post simple.map molecule intra prob 1e-5  2866     react reacUMcenH cenH 1 0 2 MU_pre MU_post simple.map molecule intra prob 1e-4 3890     react reacUAcenH cenH 1 0 2 MA_pre MA_post simple.map molecule intra prob 1e-4  2866
dynamic group bond_react_MASTER_group defined


thermo_style custom step temp c_R2[0] c_pe[0] f_4[1] f_4[2] f_4[3] f_4[4]
thermo 10000

fix		1 all nve/limit 0.5

####################################################
# WALL CONDITIONS

fix mywall M_Atoms wall/lj93 xlo EDGE 10 10 100 xhi EDGE 10 10 100

####################################################

fix myfixR2 all ave/time 10 100 1000 c_R2[0] file r2.dat
fix myfixpe all ave/time 10 100 1000 c_pe[0] file pe.dat
fix myfixReac all ave/time 10 100 1000 f_4[1] f_4[2] f_4[3] f_4[4] file reac.dat

# Compute the count of atom types
compute myTypes all count/type atom

# Define a variable to store the count of atom types
variable typeA equal c_myTypes[1]
variable typeU equal c_myTypes[2]
variable typeM equal c_myTypes[3]

# Output the count of atom types to a file every 1000 steps
fix myfixTypes all print 1000 "${typeA},${typeU},${typeM}" file types1.dat screen no


# Define a custom dump command to dump atom IDs and types every 500 steps
#dump 1 all custom 500 types2.dat id type

####################################################
dump myDump all custom 1000 id_and_type.dat id type
#####################################################



label loopreplication
    run 2000000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- fix bond/react: reacter.org doi:10.1016/j.polymer.2017.09.038, doi:10.1021/acs.macromol.0c02012

@Article{Gissinger17,
 author = {J. R. Gissinger and B. D. Jensen and K. E. Wise},
 title = {Modeling Chemical Reactions in Classical Molecular Dynamics Simulations},
 journal = {Polymer},
 year =    2017,
 volume =  128,
 pages =   {211--217}
}

@Article{Gissinger20,
 author = {J. R. Gissinger, B. D. Jensen, K. E. Wise},
 title = {{REACTER}: A Heuristic Method for Reactive Molecular Dynamics},
 journal = {Macromolecules},
 year =    2020,
 volume =  53,
 number =  22,
 pages =   {9953--9961}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5
  ghost atom cutoff = 5
  binsize = 2.5, bins = 121 144 144
  3 neighbor lists, perpetual/occasional/extra = 1 2 0
  (1) pair morse, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d
      bin: standard
  (2) compute centro/atom, occasional
      attributes: full, newton on
      pair build: full/bin
      stencil: full/bin/3d
      bin: standard
  (3) fix bond/react, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 16.8 | 16.8 | 16.8 Mbytes
   Step          Temp         c_R2[0]        c_pe[0]         f_4[1]         f_4[2]         f_4[3]         f_4[4]    
   1010000   1.1357517      6.7398774      0.48802371     0              0              0              0            
   1020000   1.1707204      7.2444896      0.45275624     3              2              3              3            
   1030000   1.1419726      7.5684261      0.49704654     3              5              3              4            
   1040000   1.1754523      6.7651339      0.43700679     5              6              3              5            
   1050000   1.1331012      5.6804193      0.49123433     7              8              6              5            
   1060000   1.167436       4.6908896      0.46913503     12             10             9              12           
   1070000   1.1492279      5.2442704      0.48761208     14             12             11             15           
   1080000   1.114507       6.272113       0.54878955     16             15             12             18           
   1090000   1.2393747      6.750515       0.36193773     18             16             14             19           
   1100000   1.0850948      7.2358037      0.59978554     18             16             15             20           
   1110000   1.1431383      7.0082399      0.51521774     22             18             16             22           
   1120000   1.1892911      6.2468471      0.43784748     28             21             17             23           
   1130000   1.1084349      6.0753862      0.54706377     28             22             20             24           
   1140000   1.1877672      5.8670944      0.41821477     29             23             24             26           
   1150000   1.1361304      6.451086       0.51945385     29             25             27             27           
   1160000   1.1064572      6.418783       0.56823821     30             26             30             28           
   1170000   1.0829001      5.7607897      0.59299764     31             28             30             31           
   1180000   1.1285545      5.3924367      0.52098779     32             28             31             35           
   1190000   1.1335197      5.2736623      0.50593158     33             31             32             38           
   1200000   1.1446986      5.7778533      0.52320786     36             32             33             40           
   1210000   1.0933897      6.3287753      0.60424289     37             32             33             40           
   1220000   1.2109984      5.8144031      0.41834995     39             33             35             41           
   1230000   1.1105532      5.8149829      0.56406503     39             35             41             46           
   1240000   1.2043019      5.9601193      0.42187231     40             38             42             47           
   1250000   1.0889354      7.0236767      0.61739893     41             42             43             48           
   1260000   1.1336226      7.9179962      0.55646875     43             44             43             51           
   1270000   1.2029786      7.9234245      0.45122803     45             45             45             51           
   1280000   1.2125063      6.8982303      0.43555582     45             46             46             53           
   1290000   1.1586452      5.2724921      0.51529366     46             46             51             54           
   1300000   1.1838952      4.4556948      0.46024446     47             49             55             56           
   1310000   1.2152609      4.1336328      0.40299793     49             50             55             58           
   1320000   1.2494713      4.4366615      0.34312597     50             52             57             61           
   1330000   1.2064883      4.5932712      0.393411       50             52             60             62           
   1340000   1.1830601      6.2146547      0.49674502     53             53             63             63           
   1350000   1.135156       7.2594793      0.57857218     54             57             66             67           
   1360000   1.1565002      7.7820598      0.5426431      56             58             67             67           
   1370000   1.2147318      7.2595689      0.44777133     57             58             68             69           
   1380000   1.1929481      6.7303766      0.48648446     59             63             71             70           
   1390000   1.2830255      5.4283158      0.33360438     62             63             74             71           
   1400000   1.2202865      4.3636384      0.43329369     64             64             80             74           
   1410000   1.2351189      3.7283215      0.39550069     65             66             81             74           
   1420000   1.2853623      4.0000606      0.33474692     65             68             84             79           
   1430000   1.2864853      4.9076884      0.40862113     70             69             86             80           
   1440000   1.2543698      4.8827596      0.47334082     72             72             87             82           
   1450000   1.2767793      5.6089215      0.46607867     75             73             90             88           
   1460000   1.287785       7.500312       0.45881733     80             75             90             91           
   1470000   1.26433        9.0586366      0.49844328     81             77             91             92           
   1480000   1.2662402      9.8227226      0.49321282     82             77             92             93           
   1490000   1.1952774      10.110976      0.59466036     85             77             93             96           
   1500000   1.1627794      9.2702016      0.63022606     86             79             93             97           
   1510000   1.2505328      8.6905485      0.51147061     89             80             94             98           
   1520000   1.2508857      8.3771252      0.51749345     91             84             95             98           
   1530000   1.2307039      7.7787296      0.54963232     91             86             97             99           
   1540000   1.2397339      5.6527296      0.52768566     94             86             99             99           
   1550000   1.2457307      4.3961384      0.52118843     96             87             102            106          
   1560000   1.2607344      4.9153955      0.513425       99             88             105            106          
   1570000   1.288025       5.3365356      0.47801701     100            89             107            108          
   1580000   1.29611        5.2291558      0.48116228     102            89             108            114          
   1590000   1.2753572      4.9552165      0.49898912     103            93             111            116          
   1600000   1.3521863      3.6720097      0.34090378     104            94             113            119          
   1610000   1.3647401      3.9514703      0.35090473     105            94             116            120          
   1620000   1.3059251      3.6018269      0.44003448     105            95             117            123          
   1630000   1.3056606      3.5327664      0.43987259     106            96             120            126          
   1640000   1.2771329      4.4317816      0.51955519     106            96             121            130          
   1650000   1.4190794      4.3756729      0.29797936     108            97             122            134          
   1660000   1.3546195      4.5902529      0.39172713     109            98             122            136          
   1670000   1.4292012      3.8342548      0.27582288     110            99             123            137          
   1680000   1.4263235      3.0970627      0.28413452     111            100            123            137          
   1690000   1.5177908      4.0104412      0.1716509      112            102            124            138          
   1700000   1.6015717      5.494624       0.13915237     113            102            127            138          
   1710000   1.6627626      6.5058556      0.52797297     113            104            127            141          
   1720000   3.2391201      4.3705773      0.78363058     113            105            129            143          
   1730000   2.9482717      5.2410824      1.4998903      114            108            130            145          
   1740000   2.8944735      6.1221451      1.6415682      114            110            131            148          
   1750000   2.897233       7.1225747      1.6490301      116            110            132            150          
   1760000   2.9523804      8.6539854      1.5883567      117            110            133            152          
   1770000   2.9270129      8.8981241      1.6597537      117            110            136            154          
   1780000   3.1541497      7.7456972      1.3579531      118            111            137            156          
   1790000   3.1014055      5.646408       1.4391994      119            113            141            157          
   1800000   3.1071018      4.7854294      1.3058874      120            113            142            158          
   1810000   3.0041751      6.2925579      1.5664753      121            114            142            159          
   1820000   2.902666       6.7223344      1.6624624      121            116            145            160          
   1830000   2.9662318      5.3455197      1.5710307      122            116            145            163          
   1840000   3.0019001      3.9480446      1.4906162      122            116            146            164          
   1850000   3.0307557      3.5901251      1.4128304      123            116            151            165          
   1860000   3.2166543      2.6252815      1.0990484      124            116            151            168          
   1870000   3.0283351      4.3791497      1.3782953      125            117            152            171          
   1880000   3.1023598      5.0199571      1.2995258      126            117            152            171          
   1890000   3.1427524      5.6890788      1.1613704      128            117            152            175          
   1900000   3.0431282      4.843643       1.4093043      129            119            153            178          
   1910000   2.9685493      3.2949193      1.3881499      130            119            153            179          
   1920000   3.1492813      3.1680677      1.1315938      132            120            153            181          
   1930000   3.173208       2.7006946      1.1701547      132            122            154            181          
   1940000   3.0683219      3.2352883      1.2544626      132            122            155            183          
   1950000   3.0679629      3.7431072      1.3383569      134            123            159            183          
   1960000   2.9292246      3.8088981      1.6041957      136            125            161            185          
   1970000   2.9747785      3.8234241      1.4970243      136            126            161            186          
   1980000   3.0883413      3.301146       1.1949717      136            126            162            190          
   1990000   2.9175977      3.7727214      1.4811481      138            126            163            191          
   2000000   3.1999685      4.121489       1.1437468      139            127            163            194          
   2010000   3.1189402      4.5382596      1.3093978      140            127            164            195          
   2020000   3.0805968      4.8818221      1.2852139      140            127            164            195          
   2030000   2.9663476      3.9157538      1.4755259      140            128            164            196          
   2040000   3.2289006      2.6129523      1.0545809      140            128            164            197          
   2050000   2.9848481      3.0847241      1.346141       140            128            164            199          
   2060000   3.1740429      1.9668219      1.0153049      140            129            165            199          
   2070000   3.175524       2.9143103      1.1363612      143            130            165            200          
   2080000   3.1180683      3.2351537      1.2778556      144            130            165            201          
   2090000   3.117817       2.4501805      1.042153       144            130            165            202          
   2100000   2.9996589      2.643584       1.1998415      144            130            166            202          
   2110000   3.1338567      2.7453796      1.1002631      144            132            169            203          
   2120000   2.9949597      2.5748868      1.2659732      146            132            169            204          
   2130000   3.1770139      2.0117469      0.93178333     146            132            170            205          
   2140000   3.4515853      1.9970212      0.59868332     146            133            170            207          
   2150000   3.2942647      1.8772183      0.86029343     147            133            170            208          
   2160000   3.2965764      2.1859883      0.87453487     147            133            173            210          
   2170000   3.4004858      2.15081        0.61849144     147            133            174            210          
   2180000   3.1875506      2.1076263      1.014383       148            133            174            211          
   2190000   3.3606706      2.2838332      0.76025284     148            133            174            211          
   2200000   3.2454554      2.5003219      0.95554411     148            133            175            212          
   2210000   3.2896085      1.9705033      0.85957673     150            134            175            214          
   2220000   2.9319485      2.3862964      1.3824272      150            134            175            215          
   2230000   3.2444636      2.1261902      0.90712194     152            134            175            217          
   2240000   3.3531106      1.9712703      0.795897       152            134            177            217          
   2250000   3.1321476      2.0779886      1.0177115      152            134            177            219          
   2260000   3.0405072      2.1476755      1.1430461      153            134            177            219          
   2270000   3.1724134      2.5908502      1.0806737      154            134            177            219          
   2280000   3.0498112      2.7595863      1.2146971      155            136            177            219          
   2290000   3.1582598      2.3692349      1.1543614      155            136            177            223          
   2300000   3.4571903      2.1596064      0.64283113     156            136            177            224          
   2310000   3.0849511      3.0844406      1.265377       157            136            178            225          
   2320000   3.421308       2.0589078      0.70238522     159            136            178            226          
   2330000   3.227646       1.8904929      0.92644295     159            136            179            226          
   2340000   3.0945431      2.182722       1.1755435      159            137            181            226          
   2350000   3.3476308      2.3399078      0.85459258     161            137            181            227          
   2360000   3.1815072      2.4288401      1.2078121      162            138            181            229          
   2370000   3.3719647      1.8457447      0.836648       162            138            181            229          
   2380000   3.153764       2.5830394      1.1821067      162            138            182            231          
   2390000   3.409189       2.1195084      0.79303465     162            138            182            231          
   2400000   3.2942635      2.1064202      0.98905875     162            139            182            234          
   2410000   3.5510386      2.0037502      0.59769003     163            140            182            234          
   2420000   3.410559       2.2420804      0.69851942     163            140            182            234          
   2430000   3.3903346      1.751101       0.74714973     164            140            182            234          
   2440000   3.2584797      2.0314433      0.93527964     165            140            182            237          
   2450000   3.3519573      2.1412579      0.87861375     166            141            182            237          
   2460000   3.3628951      2.0218171      0.83165398     166            142            182            238          
   2470000   3.3796029      1.9939605      0.79607364     167            142            183            239          
   2480000   3.2300849      1.9111962      0.96665016     167            142            183            239          
   2490000   3.1964641      1.9126201      0.98152858     168            142            184            240          
   2500000   3.3993393      2.0274097      0.64976217     169            142            184            240          
   2510000   3.3514359      1.9337525      0.7295591      170            142            185            242          
   2520000   3.4750193      1.7585404      0.64504162     170            142            186            244          
   2530000   3.4480227      1.9042903      0.67882253     170            144            186            244          
   2540000   3.2948355      2.3387981      0.88810257     170            144            187            246          
   2550000   3.2874345      2.0546572      1.0003013      170            144            188            246          
   2560000   3.4066638      1.9356965      0.74588982     170            144            188            246          
   2570000   3.402728       1.8597103      0.64638905     171            144            188            246          
   2580000   3.2966546      1.7511189      0.87335138     171            144            188            246          
   2590000   3.3960963      1.9706819      0.77355201     172            144            189            247          
   2600000   3.4717112      1.7624189      0.65274711     172            144            189            247          
   2610000   3.2844779      2.3341236      0.91077931     172            144            190            247          
   2620000   3.3790898      1.844948       0.72419595     172            144            190            247          
   2630000   3.4901278      1.6313857      0.69360945     172            144            190            247          
   2640000   3.4208191      1.728671       0.65838958     172            146            190            248          
   2650000   3.1911147      1.7918761      1.0654908      172            146            190            249          
   2660000   3.4293827      1.8861921      0.62103388     173            146            191            250          
   2670000   3.1688097      2.0423588      0.89901388     173            146            191            250          
   2680000   3.3272857      1.8706758      0.77699454     173            146            191            250          
   2690000   3.4152773      1.8875569      0.51464942     173            147            191            250          
   2700000   3.3480536      1.9860399      0.68930031     174            147            191            250          
   2710000   3.3502238      1.9154261      0.76054538     175            147            191            250          
   2720000   3.2061493      2.0057513      0.92329307     175            147            191            251          
   2730000   3.1377483      1.7791337      1.0203533      175            148            191            253          
   2740000   3.2613357      1.9140881      0.93764306     175            149            192            253          
   2750000   3.4824068      1.6871077      0.53505713     176            149            193            253          
   2760000   3.2296811      1.7130915      0.90033508     176            149            194            253          
   2770000   3.3208154      1.6383944      0.76038418     176            149            194            253          
   2780000   3.214507       1.9142034      0.91340993     176            149            195            253          
   2790000   3.5405148      1.8276331      0.4371426      176            149            196            253          
   2800000   3.5628682      1.7188788      0.49226681     177            151            196            253          
   2810000   3.4021531      1.8886871      0.62548647     177            152            196            253          
   2820000   3.3638783      2.247744       0.70991435     178            152            197            255          
   2830000   3.2874918      1.8707612      0.85122446     179            152            197            255          
   2840000   3.383937       1.6350533      0.65189887     179            152            197            255          
   2850000   3.4242099      1.8121118      0.60321003     179            153            198            255          
   2860000   3.3263853      1.7043519      0.74159468     179            154            198            255          
   2870000   3.3293532      1.836217       0.6406044      179            154            199            255          
   2880000   3.4794248      1.7491682      0.52235899     179            154            200            255          
   2890000   3.5141889      1.9041638      0.48413016     180            154            200            255          
   2900000   3.4132586      1.7932956      0.68547418     182            154            200            257          
   2910000   3.3648391      1.9720803      0.72822197     182            156            200            257          
   2920000   3.4880828      1.8832796      0.46307727     183            156            200            257          
   2930000   3.4438087      1.6209766      0.53335596     183            156            200            257          
   2940000   3.2311366      1.6770378      0.90304814     183            157            201            258          
   2950000   3.191753       1.6684021      0.92167321     183            158            203            258          
   2960000   3.2173558      1.7160966      0.84431732     184            158            204            258          
   2970000   3.2462221      1.8701682      0.8521194      184            158            204            259          
   2980000   3.5311982      1.7611106      0.41712714     184            158            204            259          
   2990000   3.4682234      1.8986327      0.51871514     184            158            205            260          
   3000000   3.1689591      2.0301914      0.92993712     184            158            205            260          
   3010000   3.3590955      1.9340184      0.72893706     184            158            207            262          
Loop time of 2381.79 on 1 procs for 2000000 steps with 200 atoms

Performance: 72550.614 tau/day, 839.706 timesteps/s, 167.941 katom-step/s
77.5% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 1007.2     | 1007.2     | 1007.2     |   0.0 | 42.29
Bond    | 10.313     | 10.313     | 10.313     |   0.0 |  0.43
Neigh   | 30.413     | 30.413     | 30.413     |   0.0 |  1.28
Comm    | 11.401     | 11.401     | 11.401     |   0.0 |  0.48
Output  | 4.5625     | 4.5625     | 4.5625     |   0.0 |  0.19
Modify  | 1312.1     | 1312.1     | 1312.1     |   0.0 | 55.09
Other   |            | 5.825      |            |       |  0.24

Nlocal:            200 ave         200 max         200 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:              2 ave           2 max           2 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:          18776 ave       18776 max       18776 min
Histogram: 1 0 0 0 0 0 0 0 0 0
FullNghs:            0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 18776
Ave neighs/atom = 93.88
Ave special neighs/atom = 5.94
Neighbor list builds = 11986
Dangerous builds = 0
    #####################################################
    # Replication => change half of the atoms to U's

    # Define the total number of atoms in your system
    variable total_atoms equal 200

    # Calculate half of the atoms
    variable half_atoms equal ${total_atoms}/2
    variable half_atoms equal 200/2

    # Loop through half of the atoms and randomly change their types to U
    label loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 161 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 100-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 25 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 99-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 172 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 98-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 149 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 97-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 47 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 96-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 127 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 95-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 156 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 94-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 103 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 93-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 8 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 92-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 76 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 91-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 74 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 90-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 61 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 89-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 42 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 88-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 184 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 87-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 81 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 86-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 109 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 85-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 120 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 84-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 116 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 83-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 166 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 82-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 191 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 81-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 31 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 80-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 145 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 79-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 175 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 78-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 88 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 77-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 52 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 76-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 38 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 75-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 98 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 74-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 127 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 73-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 123 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 72-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 11 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 71-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 75 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 70-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 61 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 69-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 114 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 68-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 125 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 67-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 58 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 66-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 24 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 65-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 154 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 64-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 102 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 63-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 108 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 62-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 21 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 61-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 131 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 60-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 193 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 59-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 12 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 58-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 166 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 57-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 43 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 56-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 64 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 55-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 16 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 54-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 164 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 53-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 137 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 52-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 16 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 51-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 9 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 50-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 189 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 49-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 40 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 48-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 52 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 47-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 90 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 46-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 91 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 45-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 168 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 44-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 156 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 43-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 185 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 42-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 72 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 41-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 15 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 40-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 183 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 39-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 99 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 38-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 68 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 37-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 86 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 36-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 162 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 35-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 199 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 34-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 50 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 33-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 32 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 32-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 121 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 31-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 55 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 30-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 14 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 29-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 38 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 28-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 190 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 27-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 157 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 26-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 112 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 25-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 197 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 24-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 170 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 23-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 193 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 22-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 138 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 21-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 120 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 20-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 56 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 19-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 10 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 18-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 172 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 17-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 103 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 16-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 96 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 15-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 73 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 14-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 112 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 13-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 22 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 12-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 56 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 11-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 128 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 10-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 98 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 9-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 88 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 8-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 36 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 7-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 53 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 6-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 60 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 5-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 15 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 4-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 144 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 3-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 23 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 2-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 25 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 1-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopaend


    #####################################################

jump SELF loopreplication
    run 2000000
Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule
Per MPI rank memory allocation (min/avg/max) = 20 | 20 | 20 Mbytes
   Step          Temp         c_R2[0]        c_pe[0]         f_4[1]         f_4[2]         f_4[3]         f_4[4]    
   3010000   3.3590955      1.9340184      5.6215407      184            158            207            262          
   3020000   5.1915442      7.5653298      3.0181566      184            158            207            265          
   3030000   5.4387585      11.775474      2.6462191      184            158            207            266          
   3040000   5.2005325      12.199321      3.0153623      184            158            207            270          
   3050000   5.0427311      10.807922      3.2033677      184            158            207            271          
   3060000   5.1174989      9.811012       3.0102824      184            158            207            272          
   3070000   5.255984       6.4829103      2.8136249      184            158            207            277          
   3080000   4.8906849      4.3952774      3.3246533      184            158            207            283          
   3090000   5.259994       7.493412       2.8405469      184            158            207            286          
   3100000   5.2332043      8.4426011      2.8581535      184            158            207            288          
   3110000   4.9750391      5.9871114      3.1805045      184            158            207            292          
   3120000   5.0974837      6.1280719      3.0803793      184            158            207            295          
   3130000   5.2162413      7.0941218      2.8263912      184            158            207            296          
   3140000   4.9070137      6.1380001      3.1890661      184            158            207            298          
   3150000   5.3828064      5.3535829      2.5102123      184            158            207            299          
   3160000   5.2759175      3.8134028      2.5564772      184            158            207            301          
   3170000   5.3371182      3.837238       2.6531289      184            158            207            303          
   3180000   5.0758869      5.3945034      2.8981001      184            158            207            305          
   3190000   4.8974116      5.3867952      3.249282       184            158            207            306          
   3200000   5.3752492      4.1696988      2.3404525      184            158            207            310          
   3210000   5.2949799      4.5625954      2.6167319      184            158            207            313          
   3220000   5.0350617      4.7053238      2.9107413      184            158            207            313          
   3230000   4.8756579      4.4515624      2.9741102      184            158            207            317          
   3240000   4.7861589      3.5397888      3.2161065      184            158            207            318          
   3250000   5.213674       4.4854249      2.5898932      184            158            207            318          
   3260000   5.3055162      3.2611501      2.6400429      184            158            207            319          
   3270000   5.1936451      3.393566       2.7066404      184            158            207            319          
   3280000   5.2562522      3.0662284      2.5340395      184            158            207            320          
   3290000   5.0070693      2.575667       2.7718496      184            158            207            321          
   3300000   5.063029       2.9011644      2.8445755      184            158            207            321          
   3310000   4.8553627      4.0327585      3.069061       184            158            207            322          
   3320000   5.1849214      3.7085545      2.5407022      184            158            207            324          
   3330000   5.0442012      2.6491436      2.8049976      184            158            207            324          
   3340000   5.1282865      2.8243808      2.6728823      184      