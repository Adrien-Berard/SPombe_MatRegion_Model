LAMMPS (17 Apr 2024)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# VARIABLES
variable fname index InitialFile.txt
variable simname index InitialFile

# Initialization
units		lj
boundary	    s s s
atom_style	bond
read_data	InitialFile.txt extra/bond/per/atom 3 extra/special/per/atom 3
Reading data file ...
  orthogonal box = (0 0 0) to (358.5 358.5 358.5)
  1 by 2 by 5 MPI processor grid
  reading atom labelmap ...
  reading bond labelmap ...
  reading atoms ...
  200 atoms
  scanning bonds ...
  4 = max bonds/atom
  orthogonal box = (-0.03585 -0.03585 -0.03585) to (358.53585 358.53585 358.53585)
  1 by 2 by 5 MPI processor grid
  reading bonds ...
  199 bonds
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     2 = max # of 1-2 neighbors
     2 = max # of 1-3 neighbors
     4 = max # of 1-4 neighbors
     9 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.005 seconds

# Dreiding potential information
neighbor	2.0 bin
neigh_modify every 1 delay 0 check yes

# Define the bond potential
# Type - Energy - Equilibrium bond length
bond_style      harmonic
bond_coeff	Normal 30 1
bond_coeff	MM 30 1
special_bonds lj/coul 0.0 0.0 0.5
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0.5     
  special bond factors coul:  0        0        0.5     
     2 = max # of 1-2 neighbors
     2 = max # of 1-3 neighbors
     4 = max # of 1-4 neighbors
     9 = max # of special neighbors
  special bonds CPU = 0.001 seconds

# Define morse potentials D - alpha - r0
pair_style	morse 3.0 # Cutoff
pair_coeff	* * 5e-2 2 2.0
#pair_coeff M M 5e-2 2 1.8

compute csym all centro/atom fcc
compute peratom all pe/atom

#####################################################
# set timestep of integrator

timestep 0.01

#####################################################
compute R2 all gyration
compute pe all pe

#####################################################
# Equilibration (Brownian dynamics at 300 K)

velocity 	all create 1.0 12315
fix		1 all nve/limit 0.5
fix 2 all langevin 1.0 1.0 1.0 12315
thermo_style	custom step temp
thermo          10000

run		100000
Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5
  ghost atom cutoff = 5
  binsize = 2.5, bins = 120 120 120
  2 neighbor lists, perpetual/occasional/extra = 1 1 0
  (1) pair morse, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d
      bin: standard
  (2) compute centro/atom, occasional
      attributes: full, newton on
      pair build: full/bin
      stencil: full/bin/3d
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 6.625 | 6.767 | 6.9 Mbytes
   Step          Temp     
         0   1            
     10000   1.0456508    
     20000   1.0366599    
     30000   0.94263984   
     40000   1.07684      
     50000   1.0581565    
     60000   1.0016467    
     70000   0.95357311   
     80000   1.0549079    
     90000   1.0414644    
    100000   0.97042235   
Loop time of 1.12497 on 10 procs for 100000 steps with 200 atoms

Performance: 76802357.320 tau/day, 88891.617 timesteps/s, 17.778 Matom-step/s
100.0% CPU use with 10 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.0034377  | 0.092077   | 0.31492    |  33.2 |  8.18
Bond    | 0.0030893  | 0.025334   | 0.063961   |  13.1 |  2.25
Neigh   | 0.090175   | 0.093662   | 0.099746   |   0.9 |  8.33
Comm    | 0.03085    | 0.30091    | 0.56469    |  32.9 | 26.75
Output  | 0.0001033  | 0.00015407 | 0.0003446  |   0.0 |  0.01
Modify  | 0.0087769  | 0.098077   | 0.24774    |  26.6 |  8.72
Other   |            | 0.5147     |            |       | 45.76

Nlocal:             20 ave          52 max           0 min
Histogram: 5 0 0 0 1 1 0 0 1 2
Nghost:           18.9 ave          38 max           0 min
Histogram: 3 0 0 0 0 1 4 0 1 1
Neighs:          100.5 ave         294 max           0 min
Histogram: 5 0 0 0 2 1 0 0 0 2
FullNghs:            0 ave           0 max           0 min
Histogram: 10 0 0 0 0 0 0 0 0 0

Total # of neighbors = 1005
Ave neighs/atom = 5.025
Ave special neighs/atom = 5.94
Neighbor list builds = 3120
Dangerous builds = 0

write_restart restart.equil
System init for write_restart ...
Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule


unfix 1
#unfix 2

#fix 1 .0
#minimize 1.0e-4 1.0e-6 1000 10000

dump mydmp all atom 500 dump.lammpstrj

#####################################################
# CenH Region, Promoter and Transcription

group cenH id 61:90
30 atoms in group cenH
group promoter id 120 121 122
3 atoms in group promoter
group transc id 123:130
8 atoms in group transc
group others subtract all cenH promoter transc
159 atoms in group others
group outOFCenH subtract all cenH
170 atoms in group outOFCenH
#####################################################

timestep 0.001

#####################################################
molecule AM_post AM_post-reaction.template
Read molecule template AM_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 2
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AM_pre AM_pre-reaction.template
Read molecule template AM_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AU_post AU_post-reaction.template
Read molecule template AU_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 1
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule AU_pre AU_pre-reaction.template
Read molecule template AU_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 2
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MA_post MA_post-reaction.template
Read molecule template MA_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MA_pre MA_pre-reaction.template
Read molecule template MA_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MU_post MU_post-reaction.template
Read molecule template MU_post:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0
molecule MU_pre MU_pre-reaction.template
Read molecule template MU_pre:
# This is a molecule template for molecule 1
  1 molecules
  0 fragments
  2 atoms with max type 3
  0 bonds with max type 0
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0



#####################################################
# Do the reactions
fix 4 all bond/react      react reacAU all 1 0 2 AM_pre AM_post simple.map molecule intra prob 1e-5 1390     react reacMU all 1 0 2 AU_pre AU_post simple.map molecule intra prob 1e-5 389     react reacUA all 1 0 2 MA_pre MA_post simple.map molecule intra prob 1e-5 3890     react reacUM all 1 0 2 MU_pre MU_post simple.map molecule intra prob 1e-5  2866
dynamic group bond_react_MASTER_group defined

#react reacUMcenH cenH 1 0 2 MU_pre MU_post simple.map molecule intra prob 1e-4 3890 #react reacUAcenH cenH 1 0 2 MA_pre MA_post simple.map molecule intra prob 1e-4  2866


thermo_style custom step temp c_R2[0] c_pe[0] f_4[1] f_4[2] f_4[3] f_4[4]
#thermo 10000

fix		1 all nve/limit 0.5

fix myfixR2 all ave/time 10 100 1000 c_R2[0] file r2.dat
fix myfixpe all ave/time 10 100 1000 c_pe[0] file pe.dat
fix myfixReac all ave/time 10 100 1000 f_4[1] f_4[2] f_4[3] f_4[4] file reac.dat

# Compute the count of atom types
compute myTypes all count/type atom

# Define a variable to store the count of atom types
variable typeA equal c_myTypes[1]
variable typeU equal c_myTypes[2]
variable typeM equal c_myTypes[3]

# Output the count of atom types to a file every 1000 steps
fix myfixTypes all print 1000 "${typeA},${typeU},${typeM}" file types1.dat screen no


# Define a custom dump command to dump atom IDs and types every 500 steps
dump 1 all custom 500 types2.dat id type


label loopreplication
    run 2000000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- fix bond/react: reacter.org doi:10.1016/j.polymer.2017.09.038, doi:10.1021/acs.macromol.0c02012

@Article{Gissinger17,
 author = {J. R. Gissinger and B. D. Jensen and K. E. Wise},
 title = {Modeling Chemical Reactions in Classical Molecular Dynamics Simulations},
 journal = {Polymer},
 year =    2017,
 volume =  128,
 pages =   {211--217}
}

@Article{Gissinger20,
 author = {J. R. Gissinger, B. D. Jensen, K. E. Wise},
 title = {{REACTER}: A Heuristic Method for Reactive Molecular Dynamics},
 journal = {Macromolecules},
 year =    2020,
 volume =  53,
 number =  22,
 pages =   {9953--9961}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 5
  ghost atom cutoff = 5
  binsize = 2.5, bins = 26 31 21
  3 neighbor lists, perpetual/occasional/extra = 1 2 0
  (1) pair morse, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d
      bin: standard
  (2) compute centro/atom, occasional
      attributes: full, newton on
      pair build: full/bin
      stencil: full/bin/3d
      bin: standard
  (3) fix bond/react, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 6.018 | 6.191 | 6.262 Mbytes
   Step          Temp         c_R2[0]        c_pe[0]         f_4[1]         f_4[2]         f_4[3]         f_4[4]    
    100000   0.97042235     34.280141      0.59489326     0              0              0              0            
    110000   0.93325739     33.865011      0.55185066     1              0              2              0            
    120000   1.0100776      33.673802      0.4576888      1              1              2              0            
    130000   0.96662355     33.633084      0.4815507      1              2              3              1            
    140000   1.0474442      33.178976      0.55552307     2              2              6              2            
    150000   1.0632435      33.343623      0.64360106     3              2              6              2            
    160000   0.96135474     33.545184      0.60809936     3              2              6              2            
    170000   0.96618003     33.096103      0.49342811     3              2              6              4            
    180000   1.078204       33.12877       0.41713292     3              2              7              5            
    190000   1.0330698      32.924297      0.45574922     3              2              9              7            
    200000   1.028904       32.900062      0.49667652     3              3              9              7            
    210000   1.1436059      32.91229       0.49531385     6              3              9              7            
    220000   0.97914074     33.130789      0.54246494     6              4              9              7            
    230000   1.0007036      32.890161      0.45604043     7              4              9              9            
    240000   1.0594008      32.701689      0.51913346     7              5              10             10           
    250000   1.0490363      32.352728      0.55396772     7              5              11             10           
    260000   1.1190572      31.934155      0.45746219     7              5              11             10           
    270000   1.0028036      31.778104      0.54077321     7              5              12             10           
    280000   0.96267587     31.801831      0.50854843     8              6              12             10           
    290000   1.069912       31.790972      0.56805343     10             7              13             10           
    300000   0.98659192     31.798081      0.570089       11             7              13             10           
    310000   0.96069062     31.62865       0.50934514     12             7              13             11           
    320000   0.9673843      31.429428      0.46635794     12             7              13             11           
    330000   1.0288886      30.946889      0.49641749     12             8              14             12           
    340000   0.96025799     30.718328      0.47555483     12             8              14             12           
    350000   1.0085077      30.135933      0.58500919     12             8              15             12           
    360000   1.0167955      29.950468      0.49694961     12             8              15             12           
    370000   1.0958664      29.402322      0.59409839     12             8              15             13           
    380000   1.0685013      29.307832      0.49323834     12             9              15             14           
    390000   1.0301538      29.062466      0.54274566     13             9              16             15           
    400000   0.9753004      29.009269      0.4801906      16             9              16             17           
    410000   0.96965602     28.596018      0.48349243     17             10             17             18           
    420000   1.0579071      28.890487      0.55761797     17             11             17             19           
    430000   0.91085042     29.022277      0.62460442     17             11             17             20           
    440000   0.9913512      29.022654      0.55944223     17             11             17             20           
    450000   0.91035811     28.966671      0.53480722     17             11             17             21           
    460000   0.9555644      28.951502      0.44564114     17             11             17             21           
    470000   0.94787708     29.405481      0.51831131     17             13             18             21           
    480000   0.94555256     29.69662       0.52825613     17             13             19             21           
    490000   1.0118388      29.663772      0.53262402     17             13             20             22           
    500000   0.9744833      29.096569      0.58959772     18             14             21             22           
    510000   1.1294693      28.766055      0.54187216     18             15             21             23           
    520000   1.0371787      28.498364      0.48807172     18             16             21             25           
    530000   0.93034166     28.739202      0.54736511     18             16             23             25           
    540000   0.97042621     29.010098      0.6281954      20             16             24             27           
    550000   1.0639182      29.298255      0.45682162     21             17             26             27           
    560000   0.98142429     28.970758      0.60143135     21             18             27             27           
    570000   1.0480588      29.085838      0.4237026      22             19             27             27           
    580000   0.90208962     29.082303      0.52812337     23             20             28             28           
    590000   0.93039852     29.256459      0.64490884     23             20             29             29           
    600000   1.0139687      29.327718      0.51500869     25             20             29             29           
    610000   1.126669       28.77357       0.5167487      26             20             29             29           
    620000   1.0873002      28.805318      0.50964355     26             21             30             29           
    630000   0.94512715     28.783951      0.51109605     27             22             31             29           
    640000   1.060757       28.664467      0.56662381     28             22             31             29           
    650000   1.0671842      28.163643      0.5051201      29             22             31             30           
    660000   0.93639168     27.727866      0.48550714     30             24             31             30           
    670000   0.99772994     26.900171      0.56003817     30             24             32             33           
    680000   0.98440178     26.933191      0.46307865     31             24             32             34           
    690000   0.99852294     27.423926      0.42207101     31             24             32             34           
    700000   0.9844047      27.001699      0.55389929     31             24             34             35           
    710000   0.98248942     26.991979      0.48812953     31             25             35             35           
    720000   0.9688019      26.765532      0.46126858     31             28             35             35           
    730000   0.91695643     26.743334      0.58822409     32             28             36             36           
    740000   1.048491       26.571521      0.45107321     32             32             36             36           
    750000   1.0109369      27.146389      0.55341691     32             32             38             39           
    760000   1.010472       26.303178      0.48381342     32             33             38             39           
    770000   1.0476882      26.691209      0.49077136     33             34             38             41           
    780000   0.96006576     26.623592      0.59335825     33             35             38             41           
    790000   0.9380961      26.239514      0.54711856     34             37             38             41           
    800000   0.95006407     26.056671      0.55454251     34             37             38             42           
    810000   1.0049974      25.588711      0.46415408     34             37             39             42           
    820000   0.99693811     25.143456      0.4441624      34             37             39             43           
    830000   1.0688465      24.921247      0.52386026     36             39             39             44           
    840000   0.87789455     24.629937      0.55183561     36             39             41             48           
    850000   1.1031232      24.229934      0.50406268     36             39             42             51           
    860000   1.0351256      24.612662      0.55776767     36             39             44             51           
    870000   1.0712791      24.034739      0.52186318     36             39             47             51           
    880000   1.0286276      24.245301      0.38807571     37             40             47             52           
    890000   0.98347041     24.034447      0.46814788     38             40             48             53           
    900000   1.1612218      23.955678      0.4532973      40             41             48             54           
    910000   0.92463734     23.90912       0.49610378     40             43             48             54           
    920000   0.94267155     23.604549      0.48390599     42             43             48             54           
    930000   1.0362677      23.015897      0.54746191     44             43             49             55           
    940000   1.0100663      23.059886      0.48110792     44             45             49             56           
    950000   1.0976916      22.643905      0.41643736     45             46             50             59           
    960000   1.0519857      22.446421      0.48918201     45             46             52             59           
    970000   1.0669014      22.302818      0.47331236     45             46             53             60           
    980000   0.96057285     22.249045      0.45205937     46             47             54             63           
    990000   0.94188385     22.54098       0.44023988     47             47             55             64           
   1000000   0.92115145     22.39439       0.48771041     48             47             58             66           
   1010000   1.0487168      21.944516      0.4604055      49             47             58             66           
   1020000   1.0234818      22.250052      0.57857567     49             48             58             67           
   1030000   1.0223812      21.951222      0.45586068     49             48             58             69           
   1040000   0.96870269     21.959236      0.52829127     49             48             60             71           
   1050000   0.93544164     21.64927       0.55750493     49             48             61             72           
   1060000   1.0023677      21.308799      0.4748619      49             49             61             73           
   1070000   1.0612907      21.58975       0.50510956     49             51             62             73           
   1080000   1.054893       21.422242      0.4777403      51             51             63             73           
   1090000   0.85433619     21.540139      0.51653343     51             51             63             75           
   1100000   0.85199793     21.220105      0.54073059     52             52             64             75           
   1110000   1.0547501      21.36361       0.49059685     53             52             65             75           
   1120000   0.95081359     21.00719       0.53987015     53             53             65             75           
   1130000   1.1232527      21.001099      0.52285854     55             53             66             75           
   1140000   0.92533611     20.963599      0.52659263     56             54             67             76           
   1150000   0.97636763     21.124707      0.49263246     56             54             69             77           
   1160000   1.0308492      20.84489       0.54746971     56             54             70             78           
   1170000   0.93176809     20.475678      0.54594197     56             55             70             79           
   1180000   1.0518981      20.61742       0.39129647     56             56             70             81           
   1190000   1.0236594      20.978942      0.53562685     58             57             71             83           
   1200000   0.94509093     21.188969      0.46222697     58             57             72             83           
   1210000   1.0232803      21.034669      0.5514173      59             57             72             84           
   1220000   1.1118412      20.70292       0.59557589     60             58             72             86           
   1230000   1.0846655      20.858968      0.49040352     61             59             72             86           
   1240000   1.061969       20.563564      0.54193898     61             60             72             86           
   1250000   0.99590089     20.898916      0.54429173     61             60             72             86           
   1260000   1.0706724      20.73974       0.48658891     64             60             74             86           
   1270000   1.0610771      20.554113      0.54443874     65             61             75             87           
   1280000   1.0433442      20.6085        0.49979175     67             61             75             87           
   1290000   0.90812003     20.190147      0.49299389     68             63             76             87           
   1300000   1.0847991      20.155086      0.46610717     68             64             77             87           
   1310000   1.016713       20.09312       0.48829397     68             65             77             87           
   1320000   1.0609098      19.882139      0.56036034     68             66             77             87           
   1330000   1.0090866      20.12195       0.49969655     68             66             77             88           
   1340000   0.9315575      20.311096      0.47774365     69             66             77             89           
   1350000   1.0678763      19.978264      0.47646322     70             67             77             89           
   1360000   1.0140143      19.990195      0.48874194     70             69             78             90           
   1370000   0.99594481     20.169804      0.53470618     70             69             78             90           
   1380000   1.0505418      20.31798       0.59518555     70             70             78             90           
   1390000   1.022837       19.747119      0.52471923     70             70             80             92           
   1400000   1.0034588      19.834645      0.43388199     70             70             83             92           
   1410000   0.9602566      20.220099      0.54434384     70             72             83             92           
   1420000   0.93650457     20.849493      0.50508718     71             74             83             93           
   1430000   1.0141561      20.877494      0.4924298      72             74             83             95           
   1440000   0.88526289     21.190609      0.47171915     72             75             84             96           
   1450000   0.99432888     20.672442      0.52453824     72             75             85             96           
   1460000   1.1039193      20.614623      0.52919175     72             76             86             97           
   1470000   0.98918632     20.681306      0.44199211     73             76             87             97           
   1480000   1.0489529      20.573088      0.48316018     75             77             89             97           
   1490000   1.1025099      20.722889      0.56266606     75             77             89             97           
   1500000   1.0408588      20.517855      0.44050608     75             78             90             98           
   1510000   0.92772402     20.75815       0.58443332     76             79             90             100          
   1520000   1.0172793      20.734802      0.47593247     77             79             90             100          
   1530000   1.1342944      20.911963      0.61497704     78             79             92             101          
   1540000   1.0140187      20.952349      0.46129521     78             80             92             101          
   1550000   1.038616       20.99554       0.43430895     78             81             92             102          
   1560000   0.98218043     20.781246      0.5323277      80             81             93             104          
   1570000   1.0179078      20.501411      0.52319863     82             82             93             105          
   1580000   1.0057384      20.917983      0.51726964     82             82             94             105          
   1590000   1.0107916      21.189841      0.50759075     84             82             95             107          
   1600000   1.0262612      21.491977      0.4281306      84             83             96             107          
   1610000   1.0068341      21.522173      0.52806272     84             83             97             109          
   1620000   0.92841129     21.052937      0.4402167      85             83             101            109          
   1630000   1.0485684      20.79322       0.45830386     85             84             101            112          
   1640000   0.96671398     20.893566      0.50601706     85             86             101            112          
   1650000   0.95226356     21.437598      0.61433028     85             86             101            112          
   1660000   1.0366379      21.293002      0.4644183      85             86             101            112          
   1670000   0.97873456     20.80355       0.51793896     86             88             101            112          
   1680000   0.99769059     20.687481      0.57718541     86             89             101            112          
   1690000   0.94566905     20.939876      0.54206226     87             89             101            114          
   1700000   0.95909352     21.257905      0.49998652     87             90             104            115          
   1710000   0.93494989     21.302334      0.56688267     88             90             104            115          
   1720000   1.0489405      20.836775      0.54394864     88             93             105            115          
   1730000   0.90126936     20.988058      0.53998605     88             93             105            117          
   1740000   1.0691356      20.807418      0.43294716     88             93             107            118          
   1750000   0.92345934     20.793652      0.48924608     89             93             107            118          
   1760000   0.93334959     20.501658      0.55824284     90             93             108            118          
   1770000   1.0718077      20.554579      0.56400296     90             93             110            119          
   1780000   1.0270453      20.755129      0.50771257     91             93             110            120          
   1790000   0.99853775     20.822707      0.5115488      91             93             110            120          
   1800000   0.91202285     20.411572      0.44266544     91             93             110            121          
   1810000   0.93681528     20.491456      0.4903013      91             93             110            121          
   1820000   1.0087755      20.670109      0.36280461     91             95             110            121          
   1830000   1.0603987      20.864408      0.54349949     91             95             110            122          
   1840000   0.98061837     20.670877      0.50263562     91             96             110            125          
   1850000   0.99085501     20.535431      0.43550779     91             97             111            126          
   1860000   1.0326797      20.346393      0.60621564     92             97             112            127          
   1870000   1.1091995      20.119417      0.43298294     92             97             112            127          
   1880000   1.0314564      19.973362      0.53588491     93             99             112            127          
   1890000   0.94785249     19.465557      0.6315181      94             100            112            127          
   1900000   1.1235602      18.852408      0.5795598      95             100            112            129          
   1910000   0.99380636     18.572411      0.53758656     95             100            112            129          
   1920000   0.98123107     18.454588      0.46479296     96             100            112            131          
   1930000   1.1452997      18.079996      0.50539935     97             100            112            131          
   1940000   1.0432035      18.10925       0.56337898     97             103            113            131          
   1950000   1.0721702      17.878589      0.52835269     99             103            113            131          
   1960000   1.0664229      18.253384      0.53699326     99             105            114            132          
   1970000   1.0096773      17.390489      0.47349557     101            105            114            134          
   1980000   1.038906       17.41987       0.45162051     102            106            114            135          
   1990000   0.97060193     17.962754      0.47959966     102            106            114            135          
   2000000   0.90829394     17.750841      0.54063994     104            106            114            135          
   2010000   1.0369472      17.769435      0.55440855     104            106            114            136          
   2020000   0.91403405     17.863392      0.55536339     104            108            114            136          
   2030000   1.1038932      17.437809      0.53199396     104            109            116            136          
   2040000   1.0896053      17.801795      0.55748564     104            109            117            137          
   2050000   0.99587821     17.77976       0.47532704     104            110            117            137          
   2060000   0.94764949     17.486904      0.50993696     105            111            117            137          
   2070000   1.0006842      17.034732      0.57695473     105            111            118            137          
   2080000   0.93858826     17.001584      0.44827111     105            111            118            138          
   2090000   0.92380217     16.998844      0.46383028     106            111            119            139          
   2100000   1.0484903      17.053242      0.52147543     106            111            119            140          
Loop time of 151.332 on 10 procs for 2000000 steps with 200 atoms

Performance: 1141859.431 tau/day, 13215.966 timesteps/s, 2.643 Matom-step/s
100.0% CPU use with 10 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.13219    | 3.8974     | 11.334     | 186.2 |  2.58
Bond    | 0.097472   | 0.57446    | 1.2709     |  55.8 |  0.38
Neigh   | 0.19497    | 0.20204    | 0.2164     |   1.5 |  0.13
Comm    | 1.7263     | 9.6558     | 17.631     | 159.6 |  6.38
Output  | 0.4373     | 0.44966    | 0.47475    |   1.5 |  0.30
Modify  | 126.16     | 132.65     | 144.89     |  57.4 | 87.65
Other   |            | 3.905      |            |       |  2.58

Nlocal:             20 ave          70 max           0 min
Histogram: 4 1 2 1 0 0 0 0 1 1
Nghost:           38.3 ave          56 max          11 min
Histogram: 1 1 1 0 0 1 0 1 4 1
Neighs:          211.4 ave         841 max           0 min
Histogram: 5 2 1 0 0 0 0 0 1 1
FullNghs:            0 ave           0 max           0 min
Histogram: 10 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2114
Ave neighs/atom = 10.57
Ave special neighs/atom = 5.94
Neighbor list builds = 6892
Dangerous builds = 0
    #####################################################
    # Replication => change half of the atoms to U's

    # Define the total number of atoms in your system
    variable total_atoms equal 200

    # Calculate half of the atoms
    variable half_atoms equal ${total_atoms}/2
    variable half_atoms equal 200/2

    # Loop through half of the atoms and randomly change their types to U
    label loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 161 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 100-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 25 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 99-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 172 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 98-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 149 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 97-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 47 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 96-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 127 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 95-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 156 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 94-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 103 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 93-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 8 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 92-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 76 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 91-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 74 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 90-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 61 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 89-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 42 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 88-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 184 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 87-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 81 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 86-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 109 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 85-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 120 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 84-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 116 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 83-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 166 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 82-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 191 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 81-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 31 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 80-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 145 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 79-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 175 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 78-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 88 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 77-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 52 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 76-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 38 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 75-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 98 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 74-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 127 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 73-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 123 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 72-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 11 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 71-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 75 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 70-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 61 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 69-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 114 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 68-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 125 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 67-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 58 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 66-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 24 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 65-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 154 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 64-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 102 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 63-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 108 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 62-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 21 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 61-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 131 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 60-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 193 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 59-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 12 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 58-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 166 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 57-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 43 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 56-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 64 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 55-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 16 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 54-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 164 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 53-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 137 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 52-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 16 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 51-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 9 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 50-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 189 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 49-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 40 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 48-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 52 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 47-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 90 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 46-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 91 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 45-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 168 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 44-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 156 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 43-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 185 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 42-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 72 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 41-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 15 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 40-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 183 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 39-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 99 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 38-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 68 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 37-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 86 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 36-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 162 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 35-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 199 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 34-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 50 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 33-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 32 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 32-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 121 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 31-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 55 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 30-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 14 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 29-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 38 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 28-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 190 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 27-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 157 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 26-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 112 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 25-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 197 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 24-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 170 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 23-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 193 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 22-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 138 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 21-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 120 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 20-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 56 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 19-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 10 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 18-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 172 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 17-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 103 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 16-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 96 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 15-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 73 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 14-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 112 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 13-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 22 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 12-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 56 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 11-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 128 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 10-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 98 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 9-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 88 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 8-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 36 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 7-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 53 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 6-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 60 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 5-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 15 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 4-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 144 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 3-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 23 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 2-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopa
        # Generate a random atom index
        variable random_index equal floor(random(1,${total_atoms},27939))
        variable random_index equal floor(random(1,200,27939))

        # Change the atom's type to U
        set atom ${random_index} type U
        set atom 25 type U
Setting atom values ...
  1 settings made for type

        # Decrease the counter for half_atoms
        variable half_atoms equal ${half_atoms}-1
        variable half_atoms equal 1-1

        # If half_atoms counter is not zero, continue the loop
        if '${half_atoms} > 0' then             "jump SELF loopa"         else "jump SELF loopaend"
jump SELF loopaend


    #####################################################

jump SELF loopreplication
    run 2000000
Generated 0 of 3 mixed pair_coeff terms from geometric mixing rule
Per MPI rank memory allocation (min/avg/max) = 7.224 | 8.805 | 9.464 Mbytes
   Step          Temp         c_R2[0]        c_pe[0]         f_4[1]         f_4[2]         f_4[3]         f_4[4]    
   2100000   1.0484903      17.053242      0.52147543     106            111            119            140          
   2110000   0.97761869     17.257617      0.49294745     107            113            119            141          
   2120000   1.0208775      17.323305      0.49415058     107            116            119            142          
   2130000   1.0555092      17.432074      0.51165331     108            116            119            144          
   2140000   0.97205519     17.703121      0.5693749      109            117            119            147          
   2150000   0.96720796     17.561127      0.61590649     110            118            119            148          
   2160000   0.99917197     17.930525      0.5757874      110            119            119            149          
   2170000   1.0029557      17.722992      0.52093283     110            120            119            151          
   2180000   1.0232505      17.682109      0.62615215     110            120            120            151          
   2190000   1.0710419      17.097158      0.52001008     110            120            120            152          
   2200000   1.1119454      17.350478      0.52111309     110            120            120            154          
   2210000   1.0219805      17.341069      0.51021047     110            120            120            154          
   2220000   1.0218833      17.368615      0.54372714     110            121            120            154          
   2230000   1.0407716      17.521271      0.51050972     110            122            120            157          
   2240000   1.013274       17.476303      0.43522855     110            124            120            159          
   2250000   1.0084328      17.054559      0.52875788     111            124            121            162          
   2260000   0.93549319     17.313077      0.45890555     111            124            122            162          
   2270000   1.0192565      16.748886      0.44426326     113            125            124            164          
   2280000   0.98464533     16.608081      0.46821152     114            126            124            164          
   2290000   1.0765291      16.582211      0.50716311     114            126            124            165          
   2300000   1.0142131      16.725672      0.4754326      114            127            125            167          
   2310000   1.0221628      16.484658      0.55980172     115            128            125            168          
   2320000   0.98726977     16.328275      0.47486737     115            128            125            168          
   2330000   0.99110865     16.948524      0.56541115     116            128            125            170          
   2340000   0.97082435     17.295093      0.58017667     117            130            125            172          
   2350000   0.9288324      17.9703        0.44316315     117            130            126            173          
   2360000   1.0660543      17.967274      0.51043274     117            131            127            175          
   2370000   1.1017097      17.82707       0.4368115      118            132            128            176          
   2380000   0.97928003     18.07811       0.61776673     118            133            129            177          
   2390000   1.0221109      17.254963      0.63309701     118            134            129            178          
   2400000   0.95272258     17.132057      0.4855024      118            134            130            179          
   2410000   1.0414185      16.935351      0.50033715     118            134            131            180          
   2420000   1.0997534      17.112666      0.55298901     118            134            131            181          
   2430000   0.97250702     17.102801      0.55310886     118            135            133            183          
   2440000   1.0002606      16.473681      0.49082046     119            135            133            183          
   2450000   0.98594565     16.825058      0.46547842     119            135            133            184          
   2460000   1.1770679      16.993827      0.69056288     119            135            135            187          
   2470000   0.97922835     16.598718      0.54649867     119            135            136            189          
   2480000   0.89185746     16.751638      0.44369557     120            136            136            191          
   2490000   1.001231       17.047856      0.46937764     120            136            137            193          
   2500000   1.0319182      17.534478      0.5081638      120            137            139            193          
   2510000   0.98013472     17.373428      0.48421239     120            137            140            195          
   2520000   1.0122792      17.62664       0.55550692     120            137            140            195          
   2530000   0.92564583     17.647731      0.43332734     120            137            140            198          
   2540000   1.0213746      17.819107      0.49077498     120            137            141            200          
   2550000   1.0712196      17.34874       0.54013002     121            137            141            201          
   2560000   0.94642785     17.374969      0.53645572     121            137            142            202          
   2570000   1.0971367      17.372772      0.44704379     121            137            142            203          
   2580000   1.0280945      17.526546      0.47498866     121            137            142            203          
   2590000   0.99712619     17.324515      0.40116105     121            137            143            203          
   2600000   0.96243949     17.046478      0.52057877     121            137            144            203          
   2610000   0.99742556     16.972723      0.45062158     121            137            144            204          
   2620000   1.0590061      16.708938      0.53962105     122            137            144            204          
   2630000   0.9943985      16.603865      0.52009665     123            137            145            205          
   2640000   0.97622224     16.668049      0.49654832     124            139            147            205          
   2650000   1.0029761      16.842544      0.52985069     124            139            147            205          
   2660000   0.97211926     16.912051      0.51723841     124            140            147            205          
   2670000   0.95727878     16.959521      0.52934791     124            140            147            208          
   2680000   0.97763034     17.284508      0.51304869     124            141            147            208          
   2690000   0.97890151     17.271887      0.49561156     124            142            147            209          
   2700000   1.033635       17.298104      0.45862938     124            142            147            210          
   2710000   0.98165258     16.836532      0.51437433     125            142            147            210          
   2720000   1.0593771      16.66923       0.60107761     126            144            149            212          
   2730000   1.0145385      16.713132      0.51431021     127            144            149            212          
   2740000   1.0733624      16.945157      0.50431468     128            144            149            212          
   2750000   1.0351173      17.198796      0.5082978      130            145            150            212          
   2760000   0.95015467     16.852608      0.54558858     130            145            150            213          
   2770000   0.97064228     16.049632      0.48703946     131            147            150            214          
   2780000   1.1105858      15.946832      0.50811386     1